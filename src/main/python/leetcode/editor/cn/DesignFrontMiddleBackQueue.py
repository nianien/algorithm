# 1670.design-front-middle-back-queue
# ËØ∑‰Ω†ËÆæËÆ°‰∏Ä‰∏™ÈòüÂàóÔºåÊîØÊåÅÂú®ÂâçÔºå‰∏≠ÔºåÂêé‰∏â‰∏™‰ΩçÁΩÆÁöÑ push Âíå pop Êìç‰Ωú„ÄÇ 
# 
#  ËØ∑‰Ω†ÂÆåÊàê FrontMiddleBack Á±ªÔºö 
# 
#  
#  FrontMiddleBack() ÂàùÂßãÂåñÈòüÂàó„ÄÇ 
#  void pushFront(int val) Â∞Ü val Ê∑ªÂä†Âà∞ÈòüÂàóÁöÑ ÊúÄÂâçÈù¢ „ÄÇ 
#  void pushMiddle(int val) Â∞Ü val Ê∑ªÂä†Âà∞ÈòüÂàóÁöÑ Ê≠£‰∏≠Èó¥ „ÄÇ 
#  void pushBack(int val) Â∞Ü val Ê∑ªÂä†Âà∞ÈòüÈáåÁöÑ ÊúÄÂêéÈù¢ „ÄÇ 
#  int popFront() Â∞Ü ÊúÄÂâçÈù¢ ÁöÑÂÖÉÁ¥†‰ªéÈòüÂàó‰∏≠Âà†Èô§Âπ∂ËøîÂõûÂÄºÔºåÂ¶ÇÊûúÂà†Èô§‰πãÂâçÈòüÂàó‰∏∫Á©∫ÔºåÈÇ£‰πàËøîÂõû -1 „ÄÇ 
#  int popMiddle() Â∞Ü Ê≠£‰∏≠Èó¥ ÁöÑÂÖÉÁ¥†‰ªéÈòüÂàó‰∏≠Âà†Èô§Âπ∂ËøîÂõûÂÄºÔºåÂ¶ÇÊûúÂà†Èô§‰πãÂâçÈòüÂàó‰∏∫Á©∫ÔºåÈÇ£‰πàËøîÂõû -1 „ÄÇ 
#  int popBack() Â∞Ü ÊúÄÂêéÈù¢ ÁöÑÂÖÉÁ¥†‰ªéÈòüÂàó‰∏≠Âà†Èô§Âπ∂ËøîÂõûÂÄºÔºåÂ¶ÇÊûúÂà†Èô§‰πãÂâçÈòüÂàó‰∏∫Á©∫ÔºåÈÇ£‰πàËøîÂõû -1 „ÄÇ 
#  
# 
#  ËØ∑Ê≥®ÊÑèÂΩìÊúâ ‰∏§‰∏™ ‰∏≠Èó¥‰ΩçÁΩÆÁöÑÊó∂ÂÄôÔºåÈÄâÊã©Èù†ÂâçÈù¢ÁöÑ‰ΩçÁΩÆËøõË°åÊìç‰Ωú„ÄÇÊØîÊñπËØ¥Ôºö 
# 
#  
#  Â∞Ü 6 Ê∑ªÂä†Âà∞ [1, 2, 3, 4, 5] ÁöÑ‰∏≠Èó¥‰ΩçÁΩÆÔºåÁªìÊûúÊï∞ÁªÑ‰∏∫ [1, 2, 6, 3, 4, 5] „ÄÇ 
#  ‰ªé [1, 2, 3, 4, 5, 6] ÁöÑ‰∏≠Èó¥‰ΩçÁΩÆÂºπÂá∫ÂÖÉÁ¥†ÔºåËøîÂõû 3 ÔºåÊï∞ÁªÑÂèò‰∏∫ [1, 2, 4, 5, 6] „ÄÇ 
#  
# 
#  
# 
#  Á§∫‰æã 1Ôºö 
# 
#  
# ËæìÂÖ•Ôºö
# ["FrontMiddleBackQueue", "pushFront", "pushBack", "pushMiddle", "pushMiddle", 
# "popFront", "popMiddle", "popMiddle", "popBack", "popFront"]
# [[], [1], [2], [3], [4], [], [], [], [], []]
# ËæìÂá∫Ôºö
# [null, null, null, null, null, 1, 3, 4, 2, -1]
# 
# Ëß£ÈáäÔºö
# FrontMiddleBackQueue q = new FrontMiddleBackQueue();
# q.pushFront(1);   // [1]
# q.pushBack(2);    // [1, 2]
# q.pushMiddle(3);  // [1, 3, 2]
# q.pushMiddle(4);  // [1, 4, 3, 2]
# q.popFront();     // ËøîÂõû 1 -> [4, 3, 2]
# q.popMiddle();    // ËøîÂõû 3 -> [4, 2]
# q.popMiddle();    // ËøîÂõû 4 -> [2]
# q.popBack();      // ËøîÂõû 2 -> []
# q.popFront();     // ËøîÂõû -1 -> [] ÔºàÈòüÂàó‰∏∫Á©∫Ôºâ
#  
# 
#  
# 
#  ÊèêÁ§∫Ôºö 
# 
#  
#  1 <= val <= 109 
#  ÊúÄÂ§öË∞ÉÁî® 1000 Ê¨° pushFrontÔºå pushMiddleÔºå pushBackÔºå popFrontÔºå popMiddle Âíå popBack „ÄÇ 
# 
#  
#  Related Topics ËÆæËÆ° ÈìæË°® 
#  üëç 9 üëé 0

# leetcode submit region begin(Prohibit modification and deletion)
class FrontMiddleBackQueue:

    def __init__(self):
        self.Q = []

    def pushFront(self, val: int) -> None:
        self.Q.insert(0, val)

    def pushMiddle(self, val: int) -> None:
        self.Q.insert(len(self.Q) // 2, val)

    def pushBack(self, val: int) -> None:
        self.Q.append(val)

    def popFront(self) -> int:
        return self.Q.pop(0) if self.Q else -1

    def popMiddle(self) -> int:
        return self.Q.pop((len(self.Q) - 1) // 2) if self.Q else -1

    def popBack(self) -> int:
        return self.Q.pop(-1) if self.Q else -1


# Your FrontMiddleBackQueue object will be instantiated and called as such:

# leetcode submit region end(Prohibit modification and deletion)

# test from here
if __name__ == '__main__':
    obj = FrontMiddleBackQueue()
    obj.pushFront(1)
    obj.pushMiddle(2)
    obj.pushBack(3)
    obj.popFront()
    obj.popMiddle()
    obj.popBack()
    obj.popFront()
    obj.popMiddle()
    obj.popBack()
